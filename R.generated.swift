//
// This is a generated file, do not edit!
// Generated by R.swift, see https://github.com/mac-cain13/R.swift
//

import Foundation
import Rswift
import UIKit

/// This `R` struct is generated and contains references to static resources.
struct R: Rswift.Validatable {
  fileprivate static let applicationLocale = hostingBundle.preferredLocalizations.first.flatMap(Locale.init) ?? Locale.current
  fileprivate static let hostingBundle = Bundle(identifier: "ruanhao.test.XLWB") ?? Bundle.main
  
  static func validate() throws {
    try intern.validate()
  }
  
  /// This `R.color` struct is generated, and contains static references to 0 color palettes.
  struct color {
    fileprivate init() {}
  }
  
  /// This `R.file` struct is generated, and contains static references to 2 files.
  struct file {
    /// Resource file `Emoticons.bundle`.
    static let emoticonsBundle = Rswift.FileResource(bundle: R.hostingBundle, name: "Emoticons", pathExtension: "bundle")
    /// Resource file `MainVCSettings.json`.
    static let mainVCSettingsJson = Rswift.FileResource(bundle: R.hostingBundle, name: "MainVCSettings", pathExtension: "json")
    
    /// `bundle.url(forResource: "Emoticons", withExtension: "bundle")`
    static func emoticonsBundle(_: Void = ()) -> Foundation.URL? {
      let fileResource = R.file.emoticonsBundle
      return fileResource.bundle.url(forResource: fileResource)
    }
    
    /// `bundle.url(forResource: "MainVCSettings", withExtension: "json")`
    static func mainVCSettingsJson(_: Void = ()) -> Foundation.URL? {
      let fileResource = R.file.mainVCSettingsJson
      return fileResource.bundle.url(forResource: fileResource)
    }
    
    fileprivate init() {}
  }
  
  /// This `R.font` struct is generated, and contains static references to 0 fonts.
  struct font {
    fileprivate init() {}
  }
  
  /// This `R.image` struct is generated, and contains static references to 191 images.
  struct image {
    /// Image `LaunchImage`.
    static let launchImage = Rswift.ImageResource(bundle: R.hostingBundle, name: "LaunchImage")
    /// Image `ad_background`.
    static let ad_background = Rswift.ImageResource(bundle: R.hostingBundle, name: "ad_background")
    /// Image `avatar_default_small`.
    static let avatar_default_small = Rswift.ImageResource(bundle: R.hostingBundle, name: "avatar_default_small")
    /// Image `avatar_default`.
    static let avatar_default = Rswift.ImageResource(bundle: R.hostingBundle, name: "avatar_default")
    /// Image `avatar_enterprise_vip`.
    static let avatar_enterprise_vip = Rswift.ImageResource(bundle: R.hostingBundle, name: "avatar_enterprise_vip")
    /// Image `avatar_grassroot`.
    static let avatar_grassroot = Rswift.ImageResource(bundle: R.hostingBundle, name: "avatar_grassroot")
    /// Image `avatar_vgirl`.
    static let avatar_vgirl = Rswift.ImageResource(bundle: R.hostingBundle, name: "avatar_vgirl")
    /// Image `avatar_vip`.
    static let avatar_vip = Rswift.ImageResource(bundle: R.hostingBundle, name: "avatar_vip")
    /// Image `common_button_white_disable`.
    static let common_button_white_disable = Rswift.ImageResource(bundle: R.hostingBundle, name: "common_button_white_disable")
    /// Image `common_icon_membership_expired`.
    static let common_icon_membership_expired = Rswift.ImageResource(bundle: R.hostingBundle, name: "common_icon_membership_expired")
    /// Image `common_icon_membership_level1`.
    static let common_icon_membership_level1 = Rswift.ImageResource(bundle: R.hostingBundle, name: "common_icon_membership_level1")
    /// Image `common_icon_membership_level2`.
    static let common_icon_membership_level2 = Rswift.ImageResource(bundle: R.hostingBundle, name: "common_icon_membership_level2")
    /// Image `common_icon_membership_level3`.
    static let common_icon_membership_level3 = Rswift.ImageResource(bundle: R.hostingBundle, name: "common_icon_membership_level3")
    /// Image `common_icon_membership_level4`.
    static let common_icon_membership_level4 = Rswift.ImageResource(bundle: R.hostingBundle, name: "common_icon_membership_level4")
    /// Image `common_icon_membership_level5`.
    static let common_icon_membership_level5 = Rswift.ImageResource(bundle: R.hostingBundle, name: "common_icon_membership_level5")
    /// Image `common_icon_membership_level6`.
    static let common_icon_membership_level6 = Rswift.ImageResource(bundle: R.hostingBundle, name: "common_icon_membership_level6")
    /// Image `common_icon_membership`.
    static let common_icon_membership = Rswift.ImageResource(bundle: R.hostingBundle, name: "common_icon_membership")
    /// Image `compose_addbutton_background_highlighted`.
    static let compose_addbutton_background_highlighted = Rswift.ImageResource(bundle: R.hostingBundle, name: "compose_addbutton_background_highlighted")
    /// Image `compose_addbutton_background`.
    static let compose_addbutton_background = Rswift.ImageResource(bundle: R.hostingBundle, name: "compose_addbutton_background")
    /// Image `compose_app_default`.
    static let compose_app_default = Rswift.ImageResource(bundle: R.hostingBundle, name: "compose_app_default")
    /// Image `compose_app_empty`.
    static let compose_app_empty = Rswift.ImageResource(bundle: R.hostingBundle, name: "compose_app_empty")
    /// Image `compose_camerabutton_background_highlighted`.
    static let compose_camerabutton_background_highlighted = Rswift.ImageResource(bundle: R.hostingBundle, name: "compose_camerabutton_background_highlighted")
    /// Image `compose_camerabutton_background_unuse`.
    static let compose_camerabutton_background_unuse = Rswift.ImageResource(bundle: R.hostingBundle, name: "compose_camerabutton_background_unuse")
    /// Image `compose_camerabutton_background`.
    static let compose_camerabutton_background = Rswift.ImageResource(bundle: R.hostingBundle, name: "compose_camerabutton_background")
    /// Image `compose_card_delete_highlighted`.
    static let compose_card_delete_highlighted = Rswift.ImageResource(bundle: R.hostingBundle, name: "compose_card_delete_highlighted")
    /// Image `compose_card_delete_normal`.
    static let compose_card_delete_normal = Rswift.ImageResource(bundle: R.hostingBundle, name: "compose_card_delete_normal")
    /// Image `compose_choose_check_default`.
    static let compose_choose_check_default = Rswift.ImageResource(bundle: R.hostingBundle, name: "compose_choose_check_default")
    /// Image `compose_choose_check`.
    static let compose_choose_check = Rswift.ImageResource(bundle: R.hostingBundle, name: "compose_choose_check")
    /// Image `compose_edit_group`.
    static let compose_edit_group = Rswift.ImageResource(bundle: R.hostingBundle, name: "compose_edit_group")
    /// Image `compose_emoticonbutton_background_highlighted`.
    static let compose_emoticonbutton_background_highlighted = Rswift.ImageResource(bundle: R.hostingBundle, name: "compose_emoticonbutton_background_highlighted")
    /// Image `compose_emoticonbutton_background`.
    static let compose_emoticonbutton_background = Rswift.ImageResource(bundle: R.hostingBundle, name: "compose_emoticonbutton_background")
    /// Image `compose_emotion_delete_highlighted`.
    static let compose_emotion_delete_highlighted = Rswift.ImageResource(bundle: R.hostingBundle, name: "compose_emotion_delete_highlighted")
    /// Image `compose_emotion_delete`.
    static let compose_emotion_delete = Rswift.ImageResource(bundle: R.hostingBundle, name: "compose_emotion_delete")
    /// Image `compose_emotion_table_left_normal`.
    static let compose_emotion_table_left_normal = Rswift.ImageResource(bundle: R.hostingBundle, name: "compose_emotion_table_left_normal")
    /// Image `compose_emotion_table_left_selected`.
    static let compose_emotion_table_left_selected = Rswift.ImageResource(bundle: R.hostingBundle, name: "compose_emotion_table_left_selected")
    /// Image `compose_emotion_table_right_normal`.
    static let compose_emotion_table_right_normal = Rswift.ImageResource(bundle: R.hostingBundle, name: "compose_emotion_table_right_normal")
    /// Image `compose_emotion_table_right_selected`.
    static let compose_emotion_table_right_selected = Rswift.ImageResource(bundle: R.hostingBundle, name: "compose_emotion_table_right_selected")
    /// Image `compose_emotion_table_send_highlighted`.
    static let compose_emotion_table_send_highlighted = Rswift.ImageResource(bundle: R.hostingBundle, name: "compose_emotion_table_send_highlighted")
    /// Image `compose_emotion_table_send_normal`.
    static let compose_emotion_table_send_normal = Rswift.ImageResource(bundle: R.hostingBundle, name: "compose_emotion_table_send_normal")
    /// Image `compose_friendcircle`.
    static let compose_friendcircle = Rswift.ImageResource(bundle: R.hostingBundle, name: "compose_friendcircle")
    /// Image `compose_group_button_background_highlighted`.
    static let compose_group_button_background_highlighted = Rswift.ImageResource(bundle: R.hostingBundle, name: "compose_group_button_background_highlighted")
    /// Image `compose_group_button_background`.
    static let compose_group_button_background = Rswift.ImageResource(bundle: R.hostingBundle, name: "compose_group_button_background")
    /// Image `compose_group`.
    static let compose_group = Rswift.ImageResource(bundle: R.hostingBundle, name: "compose_group")
    /// Image `compose_guide_background_other`.
    static let compose_guide_background_other = Rswift.ImageResource(bundle: R.hostingBundle, name: "compose_guide_background_other")
    /// Image `compose_guide_background_photo`.
    static let compose_guide_background_photo = Rswift.ImageResource(bundle: R.hostingBundle, name: "compose_guide_background_photo")
    /// Image `compose_guide_background`.
    static let compose_guide_background = Rswift.ImageResource(bundle: R.hostingBundle, name: "compose_guide_background")
    /// Image `compose_guide_button_check`.
    static let compose_guide_button_check = Rswift.ImageResource(bundle: R.hostingBundle, name: "compose_guide_button_check")
    /// Image `compose_guide_button_default`.
    static let compose_guide_button_default = Rswift.ImageResource(bundle: R.hostingBundle, name: "compose_guide_button_default")
    /// Image `compose_guide_check_box_check`.
    static let compose_guide_check_box_check = Rswift.ImageResource(bundle: R.hostingBundle, name: "compose_guide_check_box_check")
    /// Image `compose_guide_check_box_default`.
    static let compose_guide_check_box_default = Rswift.ImageResource(bundle: R.hostingBundle, name: "compose_guide_check_box_default")
    /// Image `compose_guide_check_box_right`.
    static let compose_guide_check_box_right = Rswift.ImageResource(bundle: R.hostingBundle, name: "compose_guide_check_box_right")
    /// Image `compose_guide_icon_close_check`.
    static let compose_guide_icon_close_check = Rswift.ImageResource(bundle: R.hostingBundle, name: "compose_guide_icon_close_check")
    /// Image `compose_guide_icon_close_default`.
    static let compose_guide_icon_close_default = Rswift.ImageResource(bundle: R.hostingBundle, name: "compose_guide_icon_close_default")
    /// Image `compose_guide_icon_default`.
    static let compose_guide_icon_default = Rswift.ImageResource(bundle: R.hostingBundle, name: "compose_guide_icon_default")
    /// Image `compose_image_longimage`.
    static let compose_image_longimage = Rswift.ImageResource(bundle: R.hostingBundle, name: "compose_image_longimage")
    /// Image `compose_image_placeholder`.
    static let compose_image_placeholder = Rswift.ImageResource(bundle: R.hostingBundle, name: "compose_image_placeholder")
    /// Image `compose_keyboard_dot_normal`.
    static let compose_keyboard_dot_normal = Rswift.ImageResource(bundle: R.hostingBundle, name: "compose_keyboard_dot_normal")
    /// Image `compose_keyboard_dot_selected`.
    static let compose_keyboard_dot_selected = Rswift.ImageResource(bundle: R.hostingBundle, name: "compose_keyboard_dot_selected")
    /// Image `compose_keyboardbutton_background_highlighted`.
    static let compose_keyboardbutton_background_highlighted = Rswift.ImageResource(bundle: R.hostingBundle, name: "compose_keyboardbutton_background_highlighted")
    /// Image `compose_keyboardbutton_background`.
    static let compose_keyboardbutton_background = Rswift.ImageResource(bundle: R.hostingBundle, name: "compose_keyboardbutton_background")
    /// Image `compose_locatebutton_background_failed_highlighted`.
    static let compose_locatebutton_background_failed_highlighted = Rswift.ImageResource(bundle: R.hostingBundle, name: "compose_locatebutton_background_failed_highlighted")
    /// Image `compose_locatebutton_background_failed`.
    static let compose_locatebutton_background_failed = Rswift.ImageResource(bundle: R.hostingBundle, name: "compose_locatebutton_background_failed")
    /// Image `compose_locatebutton_failed`.
    static let compose_locatebutton_failed = Rswift.ImageResource(bundle: R.hostingBundle, name: "compose_locatebutton_failed")
    /// Image `compose_locatebutton_ready`.
    static let compose_locatebutton_ready = Rswift.ImageResource(bundle: R.hostingBundle, name: "compose_locatebutton_ready")
    /// Image `compose_locatebutton_succeeded`.
    static let compose_locatebutton_succeeded = Rswift.ImageResource(bundle: R.hostingBundle, name: "compose_locatebutton_succeeded")
    /// Image `compose_location_button_background_highlighted`.
    static let compose_location_button_background_highlighted = Rswift.ImageResource(bundle: R.hostingBundle, name: "compose_location_button_background_highlighted")
    /// Image `compose_location_button_background`.
    static let compose_location_button_background = Rswift.ImageResource(bundle: R.hostingBundle, name: "compose_location_button_background")
    /// Image `compose_location_delete_button_background_highlighted`.
    static let compose_location_delete_button_background_highlighted = Rswift.ImageResource(bundle: R.hostingBundle, name: "compose_location_delete_button_background_highlighted")
    /// Image `compose_location_delete_button_background`.
    static let compose_location_delete_button_background = Rswift.ImageResource(bundle: R.hostingBundle, name: "compose_location_delete_button_background")
    /// Image `compose_location_icon_delete`.
    static let compose_location_icon_delete = Rswift.ImageResource(bundle: R.hostingBundle, name: "compose_location_icon_delete")
    /// Image `compose_mentionbutton_background_highlighted`.
    static let compose_mentionbutton_background_highlighted = Rswift.ImageResource(bundle: R.hostingBundle, name: "compose_mentionbutton_background_highlighted")
    /// Image `compose_mentionbutton_background`.
    static let compose_mentionbutton_background = Rswift.ImageResource(bundle: R.hostingBundle, name: "compose_mentionbutton_background")
    /// Image `compose_more_bigweibo`.
    static let compose_more_bigweibo = Rswift.ImageResource(bundle: R.hostingBundle, name: "compose_more_bigweibo")
    /// Image `compose_more_groupcard`.
    static let compose_more_groupcard = Rswift.ImageResource(bundle: R.hostingBundle, name: "compose_more_groupcard")
    /// Image `compose_more_highlighted`.
    static let compose_more_highlighted = Rswift.ImageResource(bundle: R.hostingBundle, name: "compose_more_highlighted")
    /// Image `compose_more_transfer`.
    static let compose_more_transfer = Rswift.ImageResource(bundle: R.hostingBundle, name: "compose_more_transfer")
    /// Image `compose_myself`.
    static let compose_myself = Rswift.ImageResource(bundle: R.hostingBundle, name: "compose_myself")
    /// Image `compose_new_group`.
    static let compose_new_group = Rswift.ImageResource(bundle: R.hostingBundle, name: "compose_new_group")
    /// Image `compose_no_emoticon`.
    static let compose_no_emoticon = Rswift.ImageResource(bundle: R.hostingBundle, name: "compose_no_emoticon")
    /// Image `compose_photo_background`.
    static let compose_photo_background = Rswift.ImageResource(bundle: R.hostingBundle, name: "compose_photo_background")
    /// Image `compose_photo_choose_background`.
    static let compose_photo_choose_background = Rswift.ImageResource(bundle: R.hostingBundle, name: "compose_photo_choose_background")
    /// Image `compose_photo_close`.
    static let compose_photo_close = Rswift.ImageResource(bundle: R.hostingBundle, name: "compose_photo_close")
    /// Image `compose_photo_filter_checkbox_checked`.
    static let compose_photo_filter_checkbox_checked = Rswift.ImageResource(bundle: R.hostingBundle, name: "compose_photo_filter_checkbox_checked")
    /// Image `compose_photo_list_background_highlighted`.
    static let compose_photo_list_background_highlighted = Rswift.ImageResource(bundle: R.hostingBundle, name: "compose_photo_list_background_highlighted")
    /// Image `compose_photo_list_background`.
    static let compose_photo_list_background = Rswift.ImageResource(bundle: R.hostingBundle, name: "compose_photo_list_background")
    /// Image `compose_photo_original_highlighted`.
    static let compose_photo_original_highlighted = Rswift.ImageResource(bundle: R.hostingBundle, name: "compose_photo_original_highlighted")
    /// Image `compose_photo_original`.
    static let compose_photo_original = Rswift.ImageResource(bundle: R.hostingBundle, name: "compose_photo_original")
    /// Image `compose_photo_photograph_background`.
    static let compose_photo_photograph_background = Rswift.ImageResource(bundle: R.hostingBundle, name: "compose_photo_photograph_background")
    /// Image `compose_photo_photograph_highlighted`.
    static let compose_photo_photograph_highlighted = Rswift.ImageResource(bundle: R.hostingBundle, name: "compose_photo_photograph_highlighted")
    /// Image `compose_photo_photograph`.
    static let compose_photo_photograph = Rswift.ImageResource(bundle: R.hostingBundle, name: "compose_photo_photograph")
    /// Image `compose_photo_preview_default`.
    static let compose_photo_preview_default = Rswift.ImageResource(bundle: R.hostingBundle, name: "compose_photo_preview_default")
    /// Image `compose_photo_preview_right`.
    static let compose_photo_preview_right = Rswift.ImageResource(bundle: R.hostingBundle, name: "compose_photo_preview_right")
    /// Image `compose_photo_video_highlighted`.
    static let compose_photo_video_highlighted = Rswift.ImageResource(bundle: R.hostingBundle, name: "compose_photo_video_highlighted")
    /// Image `compose_photo_video`.
    static let compose_photo_video = Rswift.ImageResource(bundle: R.hostingBundle, name: "compose_photo_video")
    /// Image `compose_pic_add_big`.
    static let compose_pic_add_big = Rswift.ImageResource(bundle: R.hostingBundle, name: "compose_pic_add_big")
    /// Image `compose_pic_add_highlighted`.
    static let compose_pic_add_highlighted = Rswift.ImageResource(bundle: R.hostingBundle, name: "compose_pic_add_highlighted")
    /// Image `compose_pic_add`.
    static let compose_pic_add = Rswift.ImageResource(bundle: R.hostingBundle, name: "compose_pic_add")
    /// Image `compose_pic_background_highlighted`.
    static let compose_pic_background_highlighted = Rswift.ImageResource(bundle: R.hostingBundle, name: "compose_pic_background_highlighted")
    /// Image `compose_pic_background`.
    static let compose_pic_background = Rswift.ImageResource(bundle: R.hostingBundle, name: "compose_pic_background")
    /// Image `compose_pic_bg_add5.5`.
    static let compose_pic_bg_add55 = Rswift.ImageResource(bundle: R.hostingBundle, name: "compose_pic_bg_add5.5")
    /// Image `compose_pic_bg_add_highlighted5.5`.
    static let compose_pic_bg_add_highlighted55 = Rswift.ImageResource(bundle: R.hostingBundle, name: "compose_pic_bg_add_highlighted5.5")
    /// Image `compose_pic_bg_add_highlighted`.
    static let compose_pic_bg_add_highlighted = Rswift.ImageResource(bundle: R.hostingBundle, name: "compose_pic_bg_add_highlighted")
    /// Image `compose_pic_bg_add`.
    static let compose_pic_bg_add = Rswift.ImageResource(bundle: R.hostingBundle, name: "compose_pic_bg_add")
    /// Image `compose_pic_big_add_highlighted`.
    static let compose_pic_big_add_highlighted = Rswift.ImageResource(bundle: R.hostingBundle, name: "compose_pic_big_add_highlighted")
    /// Image `compose_pic_big_add`.
    static let compose_pic_big_add = Rswift.ImageResource(bundle: R.hostingBundle, name: "compose_pic_big_add")
    /// Image `compose_privatebutton_background`.
    static let compose_privatebutton_background = Rswift.ImageResource(bundle: R.hostingBundle, name: "compose_privatebutton_background")
    /// Image `compose_publicbutton_background`.
    static let compose_publicbutton_background = Rswift.ImageResource(bundle: R.hostingBundle, name: "compose_publicbutton_background")
    /// Image `compose_publicbutton`.
    static let compose_publicbutton = Rswift.ImageResource(bundle: R.hostingBundle, name: "compose_publicbutton")
    /// Image `compose_slogan`.
    static let compose_slogan = Rswift.ImageResource(bundle: R.hostingBundle, name: "compose_slogan")
    /// Image `compose_split`.
    static let compose_split = Rswift.ImageResource(bundle: R.hostingBundle, name: "compose_split")
    /// Image `compose_toolbar_background`.
    static let compose_toolbar_background = Rswift.ImageResource(bundle: R.hostingBundle, name: "compose_toolbar_background")
    /// Image `compose_toolbar_picture@3x.png`.
    static let compose_toolbar_picture3xPng = Rswift.ImageResource(bundle: R.hostingBundle, name: "compose_toolbar_picture@3x.png")
    /// Image `compose_toolbar_picture_highlighted`.
    static let compose_toolbar_picture_highlighted = Rswift.ImageResource(bundle: R.hostingBundle, name: "compose_toolbar_picture_highlighted")
    /// Image `compose_toolbar_picture`.
    static let compose_toolbar_picture = Rswift.ImageResource(bundle: R.hostingBundle, name: "compose_toolbar_picture")
    /// Image `compose_toolbar_poi_bg`.
    static let compose_toolbar_poi_bg = Rswift.ImageResource(bundle: R.hostingBundle, name: "compose_toolbar_poi_bg")
    /// Image `compose_toolbar_video_highlighted`.
    static let compose_toolbar_video_highlighted = Rswift.ImageResource(bundle: R.hostingBundle, name: "compose_toolbar_video_highlighted")
    /// Image `compose_toolbar_video`.
    static let compose_toolbar_video = Rswift.ImageResource(bundle: R.hostingBundle, name: "compose_toolbar_video")
    /// Image `compose_trendbutton_background_highlighted`.
    static let compose_trendbutton_background_highlighted = Rswift.ImageResource(bundle: R.hostingBundle, name: "compose_trendbutton_background_highlighted")
    /// Image `compose_trendbutton_background`.
    static let compose_trendbutton_background = Rswift.ImageResource(bundle: R.hostingBundle, name: "compose_trendbutton_background")
    /// Image `compose_video_dot`.
    static let compose_video_dot = Rswift.ImageResource(bundle: R.hostingBundle, name: "compose_video_dot")
    /// Image `composer_rating_icon_highlighted`.
    static let composer_rating_icon_highlighted = Rswift.ImageResource(bundle: R.hostingBundle, name: "composer_rating_icon_highlighted")
    /// Image `composer_rating_icon`.
    static let composer_rating_icon = Rswift.ImageResource(bundle: R.hostingBundle, name: "composer_rating_icon")
    /// Image `composer_rating_small_icon_half`.
    static let composer_rating_small_icon_half = Rswift.ImageResource(bundle: R.hostingBundle, name: "composer_rating_small_icon_half")
    /// Image `composer_rating_small_icon`.
    static let composer_rating_small_icon = Rswift.ImageResource(bundle: R.hostingBundle, name: "composer_rating_small_icon")
    /// Image `composer_rating_word_background_disable`.
    static let composer_rating_word_background_disable = Rswift.ImageResource(bundle: R.hostingBundle, name: "composer_rating_word_background_disable")
    /// Image `composer_rating_word_background`.
    static let composer_rating_word_background = Rswift.ImageResource(bundle: R.hostingBundle, name: "composer_rating_word_background")
    /// Image `navigationbar_arrow_down`.
    static let navigationbar_arrow_down = Rswift.ImageResource(bundle: R.hostingBundle, name: "navigationbar_arrow_down")
    /// Image `navigationbar_arrow_up`.
    static let navigationbar_arrow_up = Rswift.ImageResource(bundle: R.hostingBundle, name: "navigationbar_arrow_up")
    /// Image `navigationbar_friendattention_highlighted`.
    static let navigationbar_friendattention_highlighted = Rswift.ImageResource(bundle: R.hostingBundle, name: "navigationbar_friendattention_highlighted")
    /// Image `navigationbar_friendattention`.
    static let navigationbar_friendattention = Rswift.ImageResource(bundle: R.hostingBundle, name: "navigationbar_friendattention")
    /// Image `navigationbar_pop_highlighted`.
    static let navigationbar_pop_highlighted = Rswift.ImageResource(bundle: R.hostingBundle, name: "navigationbar_pop_highlighted")
    /// Image `navigationbar_pop`.
    static let navigationbar_pop = Rswift.ImageResource(bundle: R.hostingBundle, name: "navigationbar_pop")
    /// Image `new_feature_1`.
    static let new_feature_1 = Rswift.ImageResource(bundle: R.hostingBundle, name: "new_feature_1")
    /// Image `new_feature_2`.
    static let new_feature_2 = Rswift.ImageResource(bundle: R.hostingBundle, name: "new_feature_2")
    /// Image `new_feature_3`.
    static let new_feature_3 = Rswift.ImageResource(bundle: R.hostingBundle, name: "new_feature_3")
    /// Image `new_feature_4`.
    static let new_feature_4 = Rswift.ImageResource(bundle: R.hostingBundle, name: "new_feature_4")
    /// Image `new_feature_button_highlighted`.
    static let new_feature_button_highlighted = Rswift.ImageResource(bundle: R.hostingBundle, name: "new_feature_button_highlighted")
    /// Image `new_feature_button`.
    static let new_feature_button = Rswift.ImageResource(bundle: R.hostingBundle, name: "new_feature_button")
    /// Image `new_feature_finish_button_highlighted`.
    static let new_feature_finish_button_highlighted = Rswift.ImageResource(bundle: R.hostingBundle, name: "new_feature_finish_button_highlighted")
    /// Image `new_feature_finish_button`.
    static let new_feature_finish_button = Rswift.ImageResource(bundle: R.hostingBundle, name: "new_feature_finish_button")
    /// Image `new_feature_share_false`.
    static let new_feature_share_false = Rswift.ImageResource(bundle: R.hostingBundle, name: "new_feature_share_false")
    /// Image `new_feature_share_true`.
    static let new_feature_share_true = Rswift.ImageResource(bundle: R.hostingBundle, name: "new_feature_share_true")
    /// Image `popover_background_left`.
    static let popover_background_left = Rswift.ImageResource(bundle: R.hostingBundle, name: "popover_background_left")
    /// Image `popover_background_right`.
    static let popover_background_right = Rswift.ImageResource(bundle: R.hostingBundle, name: "popover_background_right")
    /// Image `popover_background`.
    static let popover_background = Rswift.ImageResource(bundle: R.hostingBundle, name: "popover_background")
    /// Image `preview_like_icon_disable`.
    static let preview_like_icon_disable = Rswift.ImageResource(bundle: R.hostingBundle, name: "preview_like_icon_disable")
    /// Image `preview_like_icon_highlighted`.
    static let preview_like_icon_highlighted = Rswift.ImageResource(bundle: R.hostingBundle, name: "preview_like_icon_highlighted")
    /// Image `preview_like_icon`.
    static let preview_like_icon = Rswift.ImageResource(bundle: R.hostingBundle, name: "preview_like_icon")
    /// Image `qrcode_border`.
    static let qrcode_border = Rswift.ImageResource(bundle: R.hostingBundle, name: "qrcode_border")
    /// Image `qrcode_button_background`.
    static let qrcode_button_background = Rswift.ImageResource(bundle: R.hostingBundle, name: "qrcode_button_background")
    /// Image `qrcode_embeddedimage_shadow`.
    static let qrcode_embeddedimage_shadow = Rswift.ImageResource(bundle: R.hostingBundle, name: "qrcode_embeddedimage_shadow")
    /// Image `qrcode_navigationbar_background`.
    static let qrcode_navigationbar_background = Rswift.ImageResource(bundle: R.hostingBundle, name: "qrcode_navigationbar_background")
    /// Image `qrcode_scanline_barcode`.
    static let qrcode_scanline_barcode = Rswift.ImageResource(bundle: R.hostingBundle, name: "qrcode_scanline_barcode")
    /// Image `qrcode_scanline_qrcode`.
    static let qrcode_scanline_qrcode = Rswift.ImageResource(bundle: R.hostingBundle, name: "qrcode_scanline_qrcode")
    /// Image `qrcode_tabbar_background`.
    static let qrcode_tabbar_background = Rswift.ImageResource(bundle: R.hostingBundle, name: "qrcode_tabbar_background")
    /// Image `qrcode_tabbar_icon_barcode_highlighted`.
    static let qrcode_tabbar_icon_barcode_highlighted = Rswift.ImageResource(bundle: R.hostingBundle, name: "qrcode_tabbar_icon_barcode_highlighted")
    /// Image `qrcode_tabbar_icon_barcode`.
    static let qrcode_tabbar_icon_barcode = Rswift.ImageResource(bundle: R.hostingBundle, name: "qrcode_tabbar_icon_barcode")
    /// Image `qrcode_tabbar_icon_qrcode_highlighted`.
    static let qrcode_tabbar_icon_qrcode_highlighted = Rswift.ImageResource(bundle: R.hostingBundle, name: "qrcode_tabbar_icon_qrcode_highlighted")
    /// Image `qrcode_tabbar_icon_qrcode`.
    static let qrcode_tabbar_icon_qrcode = Rswift.ImageResource(bundle: R.hostingBundle, name: "qrcode_tabbar_icon_qrcode")
    /// Image `qrcode_tip_background`.
    static let qrcode_tip_background = Rswift.ImageResource(bundle: R.hostingBundle, name: "qrcode_tip_background")
    /// Image `tabbar_background`.
    static let tabbar_background = Rswift.ImageResource(bundle: R.hostingBundle, name: "tabbar_background")
    /// Image `tabbar_compose_button_highlighted`.
    static let tabbar_compose_button_highlighted = Rswift.ImageResource(bundle: R.hostingBundle, name: "tabbar_compose_button_highlighted")
    /// Image `tabbar_compose_button`.
    static let tabbar_compose_button = Rswift.ImageResource(bundle: R.hostingBundle, name: "tabbar_compose_button")
    /// Image `tabbar_compose_icon_add_highlighted`.
    static let tabbar_compose_icon_add_highlighted = Rswift.ImageResource(bundle: R.hostingBundle, name: "tabbar_compose_icon_add_highlighted")
    /// Image `tabbar_compose_icon_add`.
    static let tabbar_compose_icon_add = Rswift.ImageResource(bundle: R.hostingBundle, name: "tabbar_compose_icon_add")
    /// Image `tabbar_discover_highlighted`.
    static let tabbar_discover_highlighted = Rswift.ImageResource(bundle: R.hostingBundle, name: "tabbar_discover_highlighted")
    /// Image `tabbar_discover`.
    static let tabbar_discover = Rswift.ImageResource(bundle: R.hostingBundle, name: "tabbar_discover")
    /// Image `tabbar_home_highlighted`.
    static let tabbar_home_highlighted = Rswift.ImageResource(bundle: R.hostingBundle, name: "tabbar_home_highlighted")
    /// Image `tabbar_home`.
    static let tabbar_home = Rswift.ImageResource(bundle: R.hostingBundle, name: "tabbar_home")
    /// Image `tabbar_message_center_highlighted`.
    static let tabbar_message_center_highlighted = Rswift.ImageResource(bundle: R.hostingBundle, name: "tabbar_message_center_highlighted")
    /// Image `tabbar_message_center`.
    static let tabbar_message_center = Rswift.ImageResource(bundle: R.hostingBundle, name: "tabbar_message_center")
    /// Image `tabbar_profile_highlighted`.
    static let tabbar_profile_highlighted = Rswift.ImageResource(bundle: R.hostingBundle, name: "tabbar_profile_highlighted")
    /// Image `tabbar_profile`.
    static let tabbar_profile = Rswift.ImageResource(bundle: R.hostingBundle, name: "tabbar_profile")
    /// Image `tableview_loading@2x副本`.
    static let tableview_loading2x副本 = Rswift.ImageResource(bundle: R.hostingBundle, name: "tableview_loading@2x副本")
    /// Image `tableview_loading`.
    static let tableview_loading = Rswift.ImageResource(bundle: R.hostingBundle, name: "tableview_loading")
    /// Image `tableview_pull_refresh@2x副本`.
    static let tableview_pull_refresh2x副本 = Rswift.ImageResource(bundle: R.hostingBundle, name: "tableview_pull_refresh@2x副本")
    /// Image `tableview_pull_refresh`.
    static let tableview_pull_refresh = Rswift.ImageResource(bundle: R.hostingBundle, name: "tableview_pull_refresh")
    /// Image `timeline_card_bottom_background`.
    static let timeline_card_bottom_background = Rswift.ImageResource(bundle: R.hostingBundle, name: "timeline_card_bottom_background")
    /// Image `timeline_card_bottom_line_highlighted`.
    static let timeline_card_bottom_line_highlighted = Rswift.ImageResource(bundle: R.hostingBundle, name: "timeline_card_bottom_line_highlighted")
    /// Image `timeline_card_middle_background_highlighted`.
    static let timeline_card_middle_background_highlighted = Rswift.ImageResource(bundle: R.hostingBundle, name: "timeline_card_middle_background_highlighted")
    /// Image `timeline_card_middle_background`.
    static let timeline_card_middle_background = Rswift.ImageResource(bundle: R.hostingBundle, name: "timeline_card_middle_background")
    /// Image `timeline_icon_comment`.
    static let timeline_icon_comment = Rswift.ImageResource(bundle: R.hostingBundle, name: "timeline_icon_comment")
    /// Image `timeline_icon_like`.
    static let timeline_icon_like = Rswift.ImageResource(bundle: R.hostingBundle, name: "timeline_icon_like")
    /// Image `timeline_icon_retweet`.
    static let timeline_icon_retweet = Rswift.ImageResource(bundle: R.hostingBundle, name: "timeline_icon_retweet")
    /// Image `timeline_icon_unlike`.
    static let timeline_icon_unlike = Rswift.ImageResource(bundle: R.hostingBundle, name: "timeline_icon_unlike")
    /// Image `visitordiscover_feed_image_house`.
    static let visitordiscover_feed_image_house = Rswift.ImageResource(bundle: R.hostingBundle, name: "visitordiscover_feed_image_house")
    /// Image `visitordiscover_feed_image_smallicon`.
    static let visitordiscover_feed_image_smallicon = Rswift.ImageResource(bundle: R.hostingBundle, name: "visitordiscover_feed_image_smallicon")
    /// Image `visitordiscover_feed_mask_smallicon`.
    static let visitordiscover_feed_mask_smallicon = Rswift.ImageResource(bundle: R.hostingBundle, name: "visitordiscover_feed_mask_smallicon")
    /// Image `visitordiscover_image_message`.
    static let visitordiscover_image_message = Rswift.ImageResource(bundle: R.hostingBundle, name: "visitordiscover_image_message")
    /// Image `visitordiscover_image_profile`.
    static let visitordiscover_image_profile = Rswift.ImageResource(bundle: R.hostingBundle, name: "visitordiscover_image_profile")
    /// Image `visitordiscover_signup_logo`.
    static let visitordiscover_signup_logo = Rswift.ImageResource(bundle: R.hostingBundle, name: "visitordiscover_signup_logo")
    
    /// `UIImage(named: "LaunchImage", bundle: ..., traitCollection: ...)`
    static func launchImage(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.launchImage, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "ad_background", bundle: ..., traitCollection: ...)`
    static func ad_background(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.ad_background, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "avatar_default", bundle: ..., traitCollection: ...)`
    static func avatar_default(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.avatar_default, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "avatar_default_small", bundle: ..., traitCollection: ...)`
    static func avatar_default_small(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.avatar_default_small, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "avatar_enterprise_vip", bundle: ..., traitCollection: ...)`
    static func avatar_enterprise_vip(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.avatar_enterprise_vip, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "avatar_grassroot", bundle: ..., traitCollection: ...)`
    static func avatar_grassroot(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.avatar_grassroot, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "avatar_vgirl", bundle: ..., traitCollection: ...)`
    static func avatar_vgirl(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.avatar_vgirl, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "avatar_vip", bundle: ..., traitCollection: ...)`
    static func avatar_vip(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.avatar_vip, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "common_button_white_disable", bundle: ..., traitCollection: ...)`
    static func common_button_white_disable(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.common_button_white_disable, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "common_icon_membership", bundle: ..., traitCollection: ...)`
    static func common_icon_membership(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.common_icon_membership, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "common_icon_membership_expired", bundle: ..., traitCollection: ...)`
    static func common_icon_membership_expired(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.common_icon_membership_expired, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "common_icon_membership_level1", bundle: ..., traitCollection: ...)`
    static func common_icon_membership_level1(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.common_icon_membership_level1, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "common_icon_membership_level2", bundle: ..., traitCollection: ...)`
    static func common_icon_membership_level2(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.common_icon_membership_level2, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "common_icon_membership_level3", bundle: ..., traitCollection: ...)`
    static func common_icon_membership_level3(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.common_icon_membership_level3, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "common_icon_membership_level4", bundle: ..., traitCollection: ...)`
    static func common_icon_membership_level4(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.common_icon_membership_level4, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "common_icon_membership_level5", bundle: ..., traitCollection: ...)`
    static func common_icon_membership_level5(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.common_icon_membership_level5, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "common_icon_membership_level6", bundle: ..., traitCollection: ...)`
    static func common_icon_membership_level6(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.common_icon_membership_level6, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "compose_addbutton_background", bundle: ..., traitCollection: ...)`
    static func compose_addbutton_background(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.compose_addbutton_background, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "compose_addbutton_background_highlighted", bundle: ..., traitCollection: ...)`
    static func compose_addbutton_background_highlighted(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.compose_addbutton_background_highlighted, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "compose_app_default", bundle: ..., traitCollection: ...)`
    static func compose_app_default(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.compose_app_default, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "compose_app_empty", bundle: ..., traitCollection: ...)`
    static func compose_app_empty(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.compose_app_empty, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "compose_camerabutton_background", bundle: ..., traitCollection: ...)`
    static func compose_camerabutton_background(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.compose_camerabutton_background, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "compose_camerabutton_background_highlighted", bundle: ..., traitCollection: ...)`
    static func compose_camerabutton_background_highlighted(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.compose_camerabutton_background_highlighted, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "compose_camerabutton_background_unuse", bundle: ..., traitCollection: ...)`
    static func compose_camerabutton_background_unuse(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.compose_camerabutton_background_unuse, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "compose_card_delete_highlighted", bundle: ..., traitCollection: ...)`
    static func compose_card_delete_highlighted(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.compose_card_delete_highlighted, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "compose_card_delete_normal", bundle: ..., traitCollection: ...)`
    static func compose_card_delete_normal(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.compose_card_delete_normal, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "compose_choose_check", bundle: ..., traitCollection: ...)`
    static func compose_choose_check(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.compose_choose_check, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "compose_choose_check_default", bundle: ..., traitCollection: ...)`
    static func compose_choose_check_default(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.compose_choose_check_default, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "compose_edit_group", bundle: ..., traitCollection: ...)`
    static func compose_edit_group(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.compose_edit_group, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "compose_emoticonbutton_background", bundle: ..., traitCollection: ...)`
    static func compose_emoticonbutton_background(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.compose_emoticonbutton_background, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "compose_emoticonbutton_background_highlighted", bundle: ..., traitCollection: ...)`
    static func compose_emoticonbutton_background_highlighted(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.compose_emoticonbutton_background_highlighted, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "compose_emotion_delete", bundle: ..., traitCollection: ...)`
    static func compose_emotion_delete(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.compose_emotion_delete, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "compose_emotion_delete_highlighted", bundle: ..., traitCollection: ...)`
    static func compose_emotion_delete_highlighted(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.compose_emotion_delete_highlighted, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "compose_emotion_table_left_normal", bundle: ..., traitCollection: ...)`
    static func compose_emotion_table_left_normal(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.compose_emotion_table_left_normal, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "compose_emotion_table_left_selected", bundle: ..., traitCollection: ...)`
    static func compose_emotion_table_left_selected(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.compose_emotion_table_left_selected, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "compose_emotion_table_right_normal", bundle: ..., traitCollection: ...)`
    static func compose_emotion_table_right_normal(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.compose_emotion_table_right_normal, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "compose_emotion_table_right_selected", bundle: ..., traitCollection: ...)`
    static func compose_emotion_table_right_selected(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.compose_emotion_table_right_selected, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "compose_emotion_table_send_highlighted", bundle: ..., traitCollection: ...)`
    static func compose_emotion_table_send_highlighted(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.compose_emotion_table_send_highlighted, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "compose_emotion_table_send_normal", bundle: ..., traitCollection: ...)`
    static func compose_emotion_table_send_normal(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.compose_emotion_table_send_normal, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "compose_friendcircle", bundle: ..., traitCollection: ...)`
    static func compose_friendcircle(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.compose_friendcircle, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "compose_group", bundle: ..., traitCollection: ...)`
    static func compose_group(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.compose_group, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "compose_group_button_background", bundle: ..., traitCollection: ...)`
    static func compose_group_button_background(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.compose_group_button_background, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "compose_group_button_background_highlighted", bundle: ..., traitCollection: ...)`
    static func compose_group_button_background_highlighted(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.compose_group_button_background_highlighted, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "compose_guide_background", bundle: ..., traitCollection: ...)`
    static func compose_guide_background(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.compose_guide_background, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "compose_guide_background_other", bundle: ..., traitCollection: ...)`
    static func compose_guide_background_other(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.compose_guide_background_other, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "compose_guide_background_photo", bundle: ..., traitCollection: ...)`
    static func compose_guide_background_photo(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.compose_guide_background_photo, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "compose_guide_button_check", bundle: ..., traitCollection: ...)`
    static func compose_guide_button_check(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.compose_guide_button_check, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "compose_guide_button_default", bundle: ..., traitCollection: ...)`
    static func compose_guide_button_default(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.compose_guide_button_default, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "compose_guide_check_box_check", bundle: ..., traitCollection: ...)`
    static func compose_guide_check_box_check(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.compose_guide_check_box_check, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "compose_guide_check_box_default", bundle: ..., traitCollection: ...)`
    static func compose_guide_check_box_default(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.compose_guide_check_box_default, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "compose_guide_check_box_right", bundle: ..., traitCollection: ...)`
    static func compose_guide_check_box_right(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.compose_guide_check_box_right, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "compose_guide_icon_close_check", bundle: ..., traitCollection: ...)`
    static func compose_guide_icon_close_check(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.compose_guide_icon_close_check, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "compose_guide_icon_close_default", bundle: ..., traitCollection: ...)`
    static func compose_guide_icon_close_default(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.compose_guide_icon_close_default, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "compose_guide_icon_default", bundle: ..., traitCollection: ...)`
    static func compose_guide_icon_default(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.compose_guide_icon_default, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "compose_image_longimage", bundle: ..., traitCollection: ...)`
    static func compose_image_longimage(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.compose_image_longimage, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "compose_image_placeholder", bundle: ..., traitCollection: ...)`
    static func compose_image_placeholder(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.compose_image_placeholder, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "compose_keyboard_dot_normal", bundle: ..., traitCollection: ...)`
    static func compose_keyboard_dot_normal(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.compose_keyboard_dot_normal, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "compose_keyboard_dot_selected", bundle: ..., traitCollection: ...)`
    static func compose_keyboard_dot_selected(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.compose_keyboard_dot_selected, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "compose_keyboardbutton_background", bundle: ..., traitCollection: ...)`
    static func compose_keyboardbutton_background(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.compose_keyboardbutton_background, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "compose_keyboardbutton_background_highlighted", bundle: ..., traitCollection: ...)`
    static func compose_keyboardbutton_background_highlighted(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.compose_keyboardbutton_background_highlighted, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "compose_locatebutton_background_failed", bundle: ..., traitCollection: ...)`
    static func compose_locatebutton_background_failed(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.compose_locatebutton_background_failed, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "compose_locatebutton_background_failed_highlighted", bundle: ..., traitCollection: ...)`
    static func compose_locatebutton_background_failed_highlighted(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.compose_locatebutton_background_failed_highlighted, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "compose_locatebutton_failed", bundle: ..., traitCollection: ...)`
    static func compose_locatebutton_failed(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.compose_locatebutton_failed, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "compose_locatebutton_ready", bundle: ..., traitCollection: ...)`
    static func compose_locatebutton_ready(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.compose_locatebutton_ready, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "compose_locatebutton_succeeded", bundle: ..., traitCollection: ...)`
    static func compose_locatebutton_succeeded(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.compose_locatebutton_succeeded, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "compose_location_button_background", bundle: ..., traitCollection: ...)`
    static func compose_location_button_background(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.compose_location_button_background, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "compose_location_button_background_highlighted", bundle: ..., traitCollection: ...)`
    static func compose_location_button_background_highlighted(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.compose_location_button_background_highlighted, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "compose_location_delete_button_background", bundle: ..., traitCollection: ...)`
    static func compose_location_delete_button_background(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.compose_location_delete_button_background, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "compose_location_delete_button_background_highlighted", bundle: ..., traitCollection: ...)`
    static func compose_location_delete_button_background_highlighted(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.compose_location_delete_button_background_highlighted, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "compose_location_icon_delete", bundle: ..., traitCollection: ...)`
    static func compose_location_icon_delete(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.compose_location_icon_delete, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "compose_mentionbutton_background", bundle: ..., traitCollection: ...)`
    static func compose_mentionbutton_background(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.compose_mentionbutton_background, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "compose_mentionbutton_background_highlighted", bundle: ..., traitCollection: ...)`
    static func compose_mentionbutton_background_highlighted(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.compose_mentionbutton_background_highlighted, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "compose_more_bigweibo", bundle: ..., traitCollection: ...)`
    static func compose_more_bigweibo(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.compose_more_bigweibo, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "compose_more_groupcard", bundle: ..., traitCollection: ...)`
    static func compose_more_groupcard(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.compose_more_groupcard, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "compose_more_highlighted", bundle: ..., traitCollection: ...)`
    static func compose_more_highlighted(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.compose_more_highlighted, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "compose_more_transfer", bundle: ..., traitCollection: ...)`
    static func compose_more_transfer(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.compose_more_transfer, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "compose_myself", bundle: ..., traitCollection: ...)`
    static func compose_myself(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.compose_myself, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "compose_new_group", bundle: ..., traitCollection: ...)`
    static func compose_new_group(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.compose_new_group, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "compose_no_emoticon", bundle: ..., traitCollection: ...)`
    static func compose_no_emoticon(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.compose_no_emoticon, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "compose_photo_background", bundle: ..., traitCollection: ...)`
    static func compose_photo_background(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.compose_photo_background, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "compose_photo_choose_background", bundle: ..., traitCollection: ...)`
    static func compose_photo_choose_background(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.compose_photo_choose_background, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "compose_photo_close", bundle: ..., traitCollection: ...)`
    static func compose_photo_close(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.compose_photo_close, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "compose_photo_filter_checkbox_checked", bundle: ..., traitCollection: ...)`
    static func compose_photo_filter_checkbox_checked(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.compose_photo_filter_checkbox_checked, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "compose_photo_list_background", bundle: ..., traitCollection: ...)`
    static func compose_photo_list_background(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.compose_photo_list_background, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "compose_photo_list_background_highlighted", bundle: ..., traitCollection: ...)`
    static func compose_photo_list_background_highlighted(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.compose_photo_list_background_highlighted, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "compose_photo_original", bundle: ..., traitCollection: ...)`
    static func compose_photo_original(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.compose_photo_original, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "compose_photo_original_highlighted", bundle: ..., traitCollection: ...)`
    static func compose_photo_original_highlighted(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.compose_photo_original_highlighted, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "compose_photo_photograph", bundle: ..., traitCollection: ...)`
    static func compose_photo_photograph(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.compose_photo_photograph, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "compose_photo_photograph_background", bundle: ..., traitCollection: ...)`
    static func compose_photo_photograph_background(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.compose_photo_photograph_background, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "compose_photo_photograph_highlighted", bundle: ..., traitCollection: ...)`
    static func compose_photo_photograph_highlighted(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.compose_photo_photograph_highlighted, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "compose_photo_preview_default", bundle: ..., traitCollection: ...)`
    static func compose_photo_preview_default(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.compose_photo_preview_default, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "compose_photo_preview_right", bundle: ..., traitCollection: ...)`
    static func compose_photo_preview_right(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.compose_photo_preview_right, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "compose_photo_video", bundle: ..., traitCollection: ...)`
    static func compose_photo_video(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.compose_photo_video, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "compose_photo_video_highlighted", bundle: ..., traitCollection: ...)`
    static func compose_photo_video_highlighted(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.compose_photo_video_highlighted, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "compose_pic_add", bundle: ..., traitCollection: ...)`
    static func compose_pic_add(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.compose_pic_add, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "compose_pic_add_big", bundle: ..., traitCollection: ...)`
    static func compose_pic_add_big(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.compose_pic_add_big, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "compose_pic_add_highlighted", bundle: ..., traitCollection: ...)`
    static func compose_pic_add_highlighted(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.compose_pic_add_highlighted, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "compose_pic_background", bundle: ..., traitCollection: ...)`
    static func compose_pic_background(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.compose_pic_background, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "compose_pic_background_highlighted", bundle: ..., traitCollection: ...)`
    static func compose_pic_background_highlighted(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.compose_pic_background_highlighted, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "compose_pic_bg_add", bundle: ..., traitCollection: ...)`
    static func compose_pic_bg_add(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.compose_pic_bg_add, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "compose_pic_bg_add5.5", bundle: ..., traitCollection: ...)`
    static func compose_pic_bg_add55(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.compose_pic_bg_add55, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "compose_pic_bg_add_highlighted", bundle: ..., traitCollection: ...)`
    static func compose_pic_bg_add_highlighted(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.compose_pic_bg_add_highlighted, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "compose_pic_bg_add_highlighted5.5", bundle: ..., traitCollection: ...)`
    static func compose_pic_bg_add_highlighted55(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.compose_pic_bg_add_highlighted55, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "compose_pic_big_add", bundle: ..., traitCollection: ...)`
    static func compose_pic_big_add(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.compose_pic_big_add, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "compose_pic_big_add_highlighted", bundle: ..., traitCollection: ...)`
    static func compose_pic_big_add_highlighted(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.compose_pic_big_add_highlighted, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "compose_privatebutton_background", bundle: ..., traitCollection: ...)`
    static func compose_privatebutton_background(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.compose_privatebutton_background, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "compose_publicbutton", bundle: ..., traitCollection: ...)`
    static func compose_publicbutton(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.compose_publicbutton, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "compose_publicbutton_background", bundle: ..., traitCollection: ...)`
    static func compose_publicbutton_background(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.compose_publicbutton_background, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "compose_slogan", bundle: ..., traitCollection: ...)`
    static func compose_slogan(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.compose_slogan, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "compose_split", bundle: ..., traitCollection: ...)`
    static func compose_split(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.compose_split, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "compose_toolbar_background", bundle: ..., traitCollection: ...)`
    static func compose_toolbar_background(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.compose_toolbar_background, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "compose_toolbar_picture", bundle: ..., traitCollection: ...)`
    static func compose_toolbar_picture(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.compose_toolbar_picture, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "compose_toolbar_picture@3x.png", bundle: ..., traitCollection: ...)`
    static func compose_toolbar_picture3xPng(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.compose_toolbar_picture3xPng, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "compose_toolbar_picture_highlighted", bundle: ..., traitCollection: ...)`
    static func compose_toolbar_picture_highlighted(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.compose_toolbar_picture_highlighted, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "compose_toolbar_poi_bg", bundle: ..., traitCollection: ...)`
    static func compose_toolbar_poi_bg(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.compose_toolbar_poi_bg, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "compose_toolbar_video", bundle: ..., traitCollection: ...)`
    static func compose_toolbar_video(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.compose_toolbar_video, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "compose_toolbar_video_highlighted", bundle: ..., traitCollection: ...)`
    static func compose_toolbar_video_highlighted(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.compose_toolbar_video_highlighted, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "compose_trendbutton_background", bundle: ..., traitCollection: ...)`
    static func compose_trendbutton_background(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.compose_trendbutton_background, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "compose_trendbutton_background_highlighted", bundle: ..., traitCollection: ...)`
    static func compose_trendbutton_background_highlighted(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.compose_trendbutton_background_highlighted, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "compose_video_dot", bundle: ..., traitCollection: ...)`
    static func compose_video_dot(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.compose_video_dot, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "composer_rating_icon", bundle: ..., traitCollection: ...)`
    static func composer_rating_icon(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.composer_rating_icon, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "composer_rating_icon_highlighted", bundle: ..., traitCollection: ...)`
    static func composer_rating_icon_highlighted(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.composer_rating_icon_highlighted, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "composer_rating_small_icon", bundle: ..., traitCollection: ...)`
    static func composer_rating_small_icon(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.composer_rating_small_icon, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "composer_rating_small_icon_half", bundle: ..., traitCollection: ...)`
    static func composer_rating_small_icon_half(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.composer_rating_small_icon_half, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "composer_rating_word_background", bundle: ..., traitCollection: ...)`
    static func composer_rating_word_background(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.composer_rating_word_background, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "composer_rating_word_background_disable", bundle: ..., traitCollection: ...)`
    static func composer_rating_word_background_disable(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.composer_rating_word_background_disable, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "navigationbar_arrow_down", bundle: ..., traitCollection: ...)`
    static func navigationbar_arrow_down(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.navigationbar_arrow_down, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "navigationbar_arrow_up", bundle: ..., traitCollection: ...)`
    static func navigationbar_arrow_up(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.navigationbar_arrow_up, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "navigationbar_friendattention", bundle: ..., traitCollection: ...)`
    static func navigationbar_friendattention(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.navigationbar_friendattention, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "navigationbar_friendattention_highlighted", bundle: ..., traitCollection: ...)`
    static func navigationbar_friendattention_highlighted(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.navigationbar_friendattention_highlighted, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "navigationbar_pop", bundle: ..., traitCollection: ...)`
    static func navigationbar_pop(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.navigationbar_pop, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "navigationbar_pop_highlighted", bundle: ..., traitCollection: ...)`
    static func navigationbar_pop_highlighted(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.navigationbar_pop_highlighted, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "new_feature_1", bundle: ..., traitCollection: ...)`
    static func new_feature_1(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.new_feature_1, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "new_feature_2", bundle: ..., traitCollection: ...)`
    static func new_feature_2(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.new_feature_2, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "new_feature_3", bundle: ..., traitCollection: ...)`
    static func new_feature_3(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.new_feature_3, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "new_feature_4", bundle: ..., traitCollection: ...)`
    static func new_feature_4(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.new_feature_4, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "new_feature_button", bundle: ..., traitCollection: ...)`
    static func new_feature_button(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.new_feature_button, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "new_feature_button_highlighted", bundle: ..., traitCollection: ...)`
    static func new_feature_button_highlighted(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.new_feature_button_highlighted, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "new_feature_finish_button", bundle: ..., traitCollection: ...)`
    static func new_feature_finish_button(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.new_feature_finish_button, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "new_feature_finish_button_highlighted", bundle: ..., traitCollection: ...)`
    static func new_feature_finish_button_highlighted(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.new_feature_finish_button_highlighted, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "new_feature_share_false", bundle: ..., traitCollection: ...)`
    static func new_feature_share_false(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.new_feature_share_false, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "new_feature_share_true", bundle: ..., traitCollection: ...)`
    static func new_feature_share_true(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.new_feature_share_true, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "popover_background", bundle: ..., traitCollection: ...)`
    static func popover_background(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.popover_background, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "popover_background_left", bundle: ..., traitCollection: ...)`
    static func popover_background_left(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.popover_background_left, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "popover_background_right", bundle: ..., traitCollection: ...)`
    static func popover_background_right(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.popover_background_right, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "preview_like_icon", bundle: ..., traitCollection: ...)`
    static func preview_like_icon(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.preview_like_icon, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "preview_like_icon_disable", bundle: ..., traitCollection: ...)`
    static func preview_like_icon_disable(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.preview_like_icon_disable, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "preview_like_icon_highlighted", bundle: ..., traitCollection: ...)`
    static func preview_like_icon_highlighted(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.preview_like_icon_highlighted, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "qrcode_border", bundle: ..., traitCollection: ...)`
    static func qrcode_border(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.qrcode_border, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "qrcode_button_background", bundle: ..., traitCollection: ...)`
    static func qrcode_button_background(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.qrcode_button_background, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "qrcode_embeddedimage_shadow", bundle: ..., traitCollection: ...)`
    static func qrcode_embeddedimage_shadow(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.qrcode_embeddedimage_shadow, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "qrcode_navigationbar_background", bundle: ..., traitCollection: ...)`
    static func qrcode_navigationbar_background(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.qrcode_navigationbar_background, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "qrcode_scanline_barcode", bundle: ..., traitCollection: ...)`
    static func qrcode_scanline_barcode(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.qrcode_scanline_barcode, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "qrcode_scanline_qrcode", bundle: ..., traitCollection: ...)`
    static func qrcode_scanline_qrcode(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.qrcode_scanline_qrcode, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "qrcode_tabbar_background", bundle: ..., traitCollection: ...)`
    static func qrcode_tabbar_background(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.qrcode_tabbar_background, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "qrcode_tabbar_icon_barcode", bundle: ..., traitCollection: ...)`
    static func qrcode_tabbar_icon_barcode(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.qrcode_tabbar_icon_barcode, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "qrcode_tabbar_icon_barcode_highlighted", bundle: ..., traitCollection: ...)`
    static func qrcode_tabbar_icon_barcode_highlighted(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.qrcode_tabbar_icon_barcode_highlighted, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "qrcode_tabbar_icon_qrcode", bundle: ..., traitCollection: ...)`
    static func qrcode_tabbar_icon_qrcode(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.qrcode_tabbar_icon_qrcode, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "qrcode_tabbar_icon_qrcode_highlighted", bundle: ..., traitCollection: ...)`
    static func qrcode_tabbar_icon_qrcode_highlighted(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.qrcode_tabbar_icon_qrcode_highlighted, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "qrcode_tip_background", bundle: ..., traitCollection: ...)`
    static func qrcode_tip_background(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.qrcode_tip_background, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "tabbar_background", bundle: ..., traitCollection: ...)`
    static func tabbar_background(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.tabbar_background, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "tabbar_compose_button", bundle: ..., traitCollection: ...)`
    static func tabbar_compose_button(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.tabbar_compose_button, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "tabbar_compose_button_highlighted", bundle: ..., traitCollection: ...)`
    static func tabbar_compose_button_highlighted(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.tabbar_compose_button_highlighted, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "tabbar_compose_icon_add", bundle: ..., traitCollection: ...)`
    static func tabbar_compose_icon_add(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.tabbar_compose_icon_add, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "tabbar_compose_icon_add_highlighted", bundle: ..., traitCollection: ...)`
    static func tabbar_compose_icon_add_highlighted(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.tabbar_compose_icon_add_highlighted, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "tabbar_discover", bundle: ..., traitCollection: ...)`
    static func tabbar_discover(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.tabbar_discover, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "tabbar_discover_highlighted", bundle: ..., traitCollection: ...)`
    static func tabbar_discover_highlighted(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.tabbar_discover_highlighted, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "tabbar_home", bundle: ..., traitCollection: ...)`
    static func tabbar_home(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.tabbar_home, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "tabbar_home_highlighted", bundle: ..., traitCollection: ...)`
    static func tabbar_home_highlighted(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.tabbar_home_highlighted, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "tabbar_message_center", bundle: ..., traitCollection: ...)`
    static func tabbar_message_center(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.tabbar_message_center, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "tabbar_message_center_highlighted", bundle: ..., traitCollection: ...)`
    static func tabbar_message_center_highlighted(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.tabbar_message_center_highlighted, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "tabbar_profile", bundle: ..., traitCollection: ...)`
    static func tabbar_profile(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.tabbar_profile, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "tabbar_profile_highlighted", bundle: ..., traitCollection: ...)`
    static func tabbar_profile_highlighted(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.tabbar_profile_highlighted, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "tableview_loading", bundle: ..., traitCollection: ...)`
    static func tableview_loading(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.tableview_loading, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "tableview_loading@2x副本", bundle: ..., traitCollection: ...)`
    static func tableview_loading2x副本(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.tableview_loading2x副本, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "tableview_pull_refresh", bundle: ..., traitCollection: ...)`
    static func tableview_pull_refresh(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.tableview_pull_refresh, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "tableview_pull_refresh@2x副本", bundle: ..., traitCollection: ...)`
    static func tableview_pull_refresh2x副本(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.tableview_pull_refresh2x副本, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "timeline_card_bottom_background", bundle: ..., traitCollection: ...)`
    static func timeline_card_bottom_background(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.timeline_card_bottom_background, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "timeline_card_bottom_line_highlighted", bundle: ..., traitCollection: ...)`
    static func timeline_card_bottom_line_highlighted(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.timeline_card_bottom_line_highlighted, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "timeline_card_middle_background", bundle: ..., traitCollection: ...)`
    static func timeline_card_middle_background(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.timeline_card_middle_background, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "timeline_card_middle_background_highlighted", bundle: ..., traitCollection: ...)`
    static func timeline_card_middle_background_highlighted(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.timeline_card_middle_background_highlighted, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "timeline_icon_comment", bundle: ..., traitCollection: ...)`
    static func timeline_icon_comment(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.timeline_icon_comment, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "timeline_icon_like", bundle: ..., traitCollection: ...)`
    static func timeline_icon_like(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.timeline_icon_like, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "timeline_icon_retweet", bundle: ..., traitCollection: ...)`
    static func timeline_icon_retweet(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.timeline_icon_retweet, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "timeline_icon_unlike", bundle: ..., traitCollection: ...)`
    static func timeline_icon_unlike(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.timeline_icon_unlike, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "visitordiscover_feed_image_house", bundle: ..., traitCollection: ...)`
    static func visitordiscover_feed_image_house(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.visitordiscover_feed_image_house, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "visitordiscover_feed_image_smallicon", bundle: ..., traitCollection: ...)`
    static func visitordiscover_feed_image_smallicon(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.visitordiscover_feed_image_smallicon, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "visitordiscover_feed_mask_smallicon", bundle: ..., traitCollection: ...)`
    static func visitordiscover_feed_mask_smallicon(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.visitordiscover_feed_mask_smallicon, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "visitordiscover_image_message", bundle: ..., traitCollection: ...)`
    static func visitordiscover_image_message(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.visitordiscover_image_message, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "visitordiscover_image_profile", bundle: ..., traitCollection: ...)`
    static func visitordiscover_image_profile(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.visitordiscover_image_profile, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "visitordiscover_signup_logo", bundle: ..., traitCollection: ...)`
    static func visitordiscover_signup_logo(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.visitordiscover_signup_logo, compatibleWith: traitCollection)
    }
    
    fileprivate init() {}
  }
  
  /// This `R.nib` struct is generated, and contains static references to 2 nibs.
  struct nib {
    /// Nib `RefreashView`.
    static let refreashView = _R.nib._RefreashView()
    /// Nib `visitorView`.
    static let visitorView = _R.nib._visitorView()
    
    /// `UINib(name: "RefreashView", in: bundle)`
    static func refreashView(_: Void = ()) -> UIKit.UINib {
      return UIKit.UINib(resource: R.nib.refreashView)
    }
    
    /// `UINib(name: "visitorView", in: bundle)`
    static func visitorView(_: Void = ()) -> UIKit.UINib {
      return UIKit.UINib(resource: R.nib.visitorView)
    }
    
    fileprivate init() {}
  }
  
  /// This `R.reuseIdentifier` struct is generated, and contains static references to 4 reuse identifiers.
  struct reuseIdentifier {
    /// Reuse identifier `HomeViewCell`.
    static let homeViewCell: Rswift.ReuseIdentifier<HomeViewCell> = Rswift.ReuseIdentifier(identifier: "HomeViewCell")
    /// Reuse identifier `collectioncell`.
    static let collectioncell: Rswift.ReuseIdentifier<HomePictureCell> = Rswift.ReuseIdentifier(identifier: "collectioncell")
    /// Reuse identifier `forwardCell`.
    static let forwardCell: Rswift.ReuseIdentifier<HomeViewCell> = Rswift.ReuseIdentifier(identifier: "forwardCell")
    /// Reuse identifier `newfeatureCell`.
    static let newfeatureCell: Rswift.ReuseIdentifier<NewFeatureCell> = Rswift.ReuseIdentifier(identifier: "newfeatureCell")
    
    fileprivate init() {}
  }
  
  /// This `R.segue` struct is generated, and contains static references to 0 view controllers.
  struct segue {
    fileprivate init() {}
  }
  
  /// This `R.storyboard` struct is generated, and contains static references to 12 storyboards.
  struct storyboard {
    /// Storyboard `Composes`.
    static let composes = _R.storyboard.composes()
    /// Storyboard `Discover`.
    static let discover = _R.storyboard.discover()
    /// Storyboard `Home`.
    static let home = _R.storyboard.home()
    /// Storyboard `Main`.
    static let main = _R.storyboard.main()
    /// Storyboard `Me`.
    static let me = _R.storyboard.me()
    /// Storyboard `Message`.
    static let message = _R.storyboard.message()
    /// Storyboard `NewFeatureViewController`.
    static let newFeatureViewController = _R.storyboard.newFeatureViewController()
    /// Storyboard `Null`.
    static let null = _R.storyboard.null()
    /// Storyboard `Popover`.
    static let popover = _R.storyboard.popover()
    /// Storyboard `QRcodeViewController`.
    static let qRcodeViewController = _R.storyboard.qRcodeViewController()
    /// Storyboard `WelcomeViewController`.
    static let welcomeViewController = _R.storyboard.welcomeViewController()
    /// Storyboard `oAuthViewController`.
    static let oAuthViewController = _R.storyboard.oAuthViewController()
    
    /// `UIStoryboard(name: "Composes", bundle: ...)`
    static func composes(_: Void = ()) -> UIKit.UIStoryboard {
      return UIKit.UIStoryboard(resource: R.storyboard.composes)
    }
    
    /// `UIStoryboard(name: "Discover", bundle: ...)`
    static func discover(_: Void = ()) -> UIKit.UIStoryboard {
      return UIKit.UIStoryboard(resource: R.storyboard.discover)
    }
    
    /// `UIStoryboard(name: "Home", bundle: ...)`
    static func home(_: Void = ()) -> UIKit.UIStoryboard {
      return UIKit.UIStoryboard(resource: R.storyboard.home)
    }
    
    /// `UIStoryboard(name: "Main", bundle: ...)`
    static func main(_: Void = ()) -> UIKit.UIStoryboard {
      return UIKit.UIStoryboard(resource: R.storyboard.main)
    }
    
    /// `UIStoryboard(name: "Me", bundle: ...)`
    static func me(_: Void = ()) -> UIKit.UIStoryboard {
      return UIKit.UIStoryboard(resource: R.storyboard.me)
    }
    
    /// `UIStoryboard(name: "Message", bundle: ...)`
    static func message(_: Void = ()) -> UIKit.UIStoryboard {
      return UIKit.UIStoryboard(resource: R.storyboard.message)
    }
    
    /// `UIStoryboard(name: "NewFeatureViewController", bundle: ...)`
    static func newFeatureViewController(_: Void = ()) -> UIKit.UIStoryboard {
      return UIKit.UIStoryboard(resource: R.storyboard.newFeatureViewController)
    }
    
    /// `UIStoryboard(name: "Null", bundle: ...)`
    static func null(_: Void = ()) -> UIKit.UIStoryboard {
      return UIKit.UIStoryboard(resource: R.storyboard.null)
    }
    
    /// `UIStoryboard(name: "Popover", bundle: ...)`
    static func popover(_: Void = ()) -> UIKit.UIStoryboard {
      return UIKit.UIStoryboard(resource: R.storyboard.popover)
    }
    
    /// `UIStoryboard(name: "QRcodeViewController", bundle: ...)`
    static func qRcodeViewController(_: Void = ()) -> UIKit.UIStoryboard {
      return UIKit.UIStoryboard(resource: R.storyboard.qRcodeViewController)
    }
    
    /// `UIStoryboard(name: "WelcomeViewController", bundle: ...)`
    static func welcomeViewController(_: Void = ()) -> UIKit.UIStoryboard {
      return UIKit.UIStoryboard(resource: R.storyboard.welcomeViewController)
    }
    
    /// `UIStoryboard(name: "oAuthViewController", bundle: ...)`
    static func oAuthViewController(_: Void = ()) -> UIKit.UIStoryboard {
      return UIKit.UIStoryboard(resource: R.storyboard.oAuthViewController)
    }
    
    fileprivate init() {}
  }
  
  /// This `R.string` struct is generated, and contains static references to 0 localization tables.
  struct string {
    fileprivate init() {}
  }
  
  fileprivate struct intern: Rswift.Validatable {
    fileprivate static func validate() throws {
      try _R.validate()
    }
    
    fileprivate init() {}
  }
  
  fileprivate init() {}
}

struct _R: Rswift.Validatable {
  static func validate() throws {
    try storyboard.validate()
    try nib.validate()
  }
  
  struct nib: Rswift.Validatable {
    static func validate() throws {
      try _RefreashView.validate()
      try _visitorView.validate()
    }
    
    struct _RefreashView: Rswift.NibResourceType, Rswift.Validatable {
      let bundle = R.hostingBundle
      let name = "RefreashView"
      
      func firstView(owner ownerOrNil: AnyObject?, options optionsOrNil: [NSObject : AnyObject]? = nil) -> RefreashView? {
        return instantiate(withOwner: ownerOrNil, options: optionsOrNil)[0] as? RefreashView
      }
      
      static func validate() throws {
        if UIKit.UIImage(named: "tableview_loading") == nil { throw Rswift.ValidationError(description: "[R.swift] Image named 'tableview_loading' is used in nib 'RefreashView', but couldn't be loaded.") }
        if UIKit.UIImage(named: "tableview_pull_refresh") == nil { throw Rswift.ValidationError(description: "[R.swift] Image named 'tableview_pull_refresh' is used in nib 'RefreashView', but couldn't be loaded.") }
      }
      
      fileprivate init() {}
    }
    
    struct _visitorView: Rswift.NibResourceType, Rswift.Validatable {
      let bundle = R.hostingBundle
      let name = "visitorView"
      
      func firstView(owner ownerOrNil: AnyObject?, options optionsOrNil: [NSObject : AnyObject]? = nil) -> visitorView? {
        return instantiate(withOwner: ownerOrNil, options: optionsOrNil)[0] as? visitorView
      }
      
      static func validate() throws {
        if UIKit.UIImage(named: "common_button_white_disable") == nil { throw Rswift.ValidationError(description: "[R.swift] Image named 'common_button_white_disable' is used in nib 'visitorView', but couldn't be loaded.") }
        if UIKit.UIImage(named: "visitordiscover_feed_mask_smallicon") == nil { throw Rswift.ValidationError(description: "[R.swift] Image named 'visitordiscover_feed_mask_smallicon' is used in nib 'visitorView', but couldn't be loaded.") }
        if UIKit.UIImage(named: "visitordiscover_feed_image_smallicon") == nil { throw Rswift.ValidationError(description: "[R.swift] Image named 'visitordiscover_feed_image_smallicon' is used in nib 'visitorView', but couldn't be loaded.") }
        if UIKit.UIImage(named: "visitordiscover_feed_image_house") == nil { throw Rswift.ValidationError(description: "[R.swift] Image named 'visitordiscover_feed_image_house' is used in nib 'visitorView', but couldn't be loaded.") }
      }
      
      fileprivate init() {}
    }
    
    fileprivate init() {}
  }
  
  struct storyboard: Rswift.Validatable {
    static func validate() throws {
      try composes.validate()
      try discover.validate()
      try welcomeViewController.validate()
      try qRcodeViewController.validate()
      try home.validate()
      try me.validate()
      try popover.validate()
      try message.validate()
    }
    
    struct composes: Rswift.StoryboardResourceWithInitialControllerType, Rswift.Validatable {
      typealias InitialController = UIKit.UINavigationController
      
      let bundle = R.hostingBundle
      let name = "Composes"
      
      static func validate() throws {
        if UIKit.UIImage(named: "compose_addbutton_background") == nil { throw Rswift.ValidationError(description: "[R.swift] Image named 'compose_addbutton_background' is used in storyboard 'Composes', but couldn't be loaded.") }
        if UIKit.UIImage(named: "compose_toolbar_picture") == nil { throw Rswift.ValidationError(description: "[R.swift] Image named 'compose_toolbar_picture' is used in storyboard 'Composes', but couldn't be loaded.") }
        if UIKit.UIImage(named: "compose_emoticonbutton_background") == nil { throw Rswift.ValidationError(description: "[R.swift] Image named 'compose_emoticonbutton_background' is used in storyboard 'Composes', but couldn't be loaded.") }
        if UIKit.UIImage(named: "compose_trendbutton_background") == nil { throw Rswift.ValidationError(description: "[R.swift] Image named 'compose_trendbutton_background' is used in storyboard 'Composes', but couldn't be loaded.") }
        if UIKit.UIImage(named: "compose_mentionbutton_background") == nil { throw Rswift.ValidationError(description: "[R.swift] Image named 'compose_mentionbutton_background' is used in storyboard 'Composes', but couldn't be loaded.") }
      }
      
      fileprivate init() {}
    }
    
    struct discover: Rswift.StoryboardResourceWithInitialControllerType, Rswift.Validatable {
      typealias InitialController = UIKit.UINavigationController
      
      let bundle = R.hostingBundle
      let name = "Discover"
      
      static func validate() throws {
        if UIKit.UIImage(named: "tabbar_discover") == nil { throw Rswift.ValidationError(description: "[R.swift] Image named 'tabbar_discover' is used in storyboard 'Discover', but couldn't be loaded.") }
      }
      
      fileprivate init() {}
    }
    
    struct home: Rswift.StoryboardResourceWithInitialControllerType, Rswift.Validatable {
      typealias InitialController = UIKit.UINavigationController
      
      let bundle = R.hostingBundle
      let name = "Home"
      
      static func validate() throws {
        if UIKit.UIImage(named: "timeline_icon_unlike") == nil { throw Rswift.ValidationError(description: "[R.swift] Image named 'timeline_icon_unlike' is used in storyboard 'Home', but couldn't be loaded.") }
        if UIKit.UIImage(named: "timeline_card_bottom_background") == nil { throw Rswift.ValidationError(description: "[R.swift] Image named 'timeline_card_bottom_background' is used in storyboard 'Home', but couldn't be loaded.") }
        if UIKit.UIImage(named: "tabbar_home") == nil { throw Rswift.ValidationError(description: "[R.swift] Image named 'tabbar_home' is used in storyboard 'Home', but couldn't be loaded.") }
        if UIKit.UIImage(named: "common_icon_membership_level1") == nil { throw Rswift.ValidationError(description: "[R.swift] Image named 'common_icon_membership_level1' is used in storyboard 'Home', but couldn't be loaded.") }
        if UIKit.UIImage(named: "timeline_icon_comment") == nil { throw Rswift.ValidationError(description: "[R.swift] Image named 'timeline_icon_comment' is used in storyboard 'Home', but couldn't be loaded.") }
        if UIKit.UIImage(named: "timeline_icon_retweet") == nil { throw Rswift.ValidationError(description: "[R.swift] Image named 'timeline_icon_retweet' is used in storyboard 'Home', but couldn't be loaded.") }
      }
      
      fileprivate init() {}
    }
    
    struct main: Rswift.StoryboardResourceWithInitialControllerType {
      typealias InitialController = MainViewController
      
      let bundle = R.hostingBundle
      let name = "Main"
      
      fileprivate init() {}
    }
    
    struct me: Rswift.StoryboardResourceWithInitialControllerType, Rswift.Validatable {
      typealias InitialController = UIKit.UINavigationController
      
      let bundle = R.hostingBundle
      let name = "Me"
      
      static func validate() throws {
        if UIKit.UIImage(named: "tabbar_profile") == nil { throw Rswift.ValidationError(description: "[R.swift] Image named 'tabbar_profile' is used in storyboard 'Me', but couldn't be loaded.") }
      }
      
      fileprivate init() {}
    }
    
    struct message: Rswift.StoryboardResourceWithInitialControllerType, Rswift.Validatable {
      typealias InitialController = UIKit.UINavigationController
      
      let bundle = R.hostingBundle
      let name = "Message"
      
      static func validate() throws {
        if UIKit.UIImage(named: "tabbar_message_center") == nil { throw Rswift.ValidationError(description: "[R.swift] Image named 'tabbar_message_center' is used in storyboard 'Message', but couldn't be loaded.") }
      }
      
      fileprivate init() {}
    }
    
    struct newFeatureViewController: Rswift.StoryboardResourceWithInitialControllerType {
      typealias InitialController = NewFeatureViewController
      
      let bundle = R.hostingBundle
      let name = "NewFeatureViewController"
      
      fileprivate init() {}
    }
    
    struct null: Rswift.StoryboardResourceWithInitialControllerType {
      typealias InitialController = NullViewController
      
      let bundle = R.hostingBundle
      let name = "Null"
      
      fileprivate init() {}
    }
    
    struct oAuthViewController: Rswift.StoryboardResourceWithInitialControllerType {
      typealias InitialController = oAuthViewController
      
      let bundle = R.hostingBundle
      let name = "oAuthViewController"
      
      fileprivate init() {}
    }
    
    struct popover: Rswift.StoryboardResourceWithInitialControllerType, Rswift.Validatable {
      typealias InitialController = UIKit.UIViewController
      
      let bundle = R.hostingBundle
      let name = "Popover"
      
      static func validate() throws {
        if UIKit.UIImage(named: "popover_background") == nil { throw Rswift.ValidationError(description: "[R.swift] Image named 'popover_background' is used in storyboard 'Popover', but couldn't be loaded.") }
      }
      
      fileprivate init() {}
    }
    
    struct qRcodeViewController: Rswift.StoryboardResourceWithInitialControllerType, Rswift.Validatable {
      typealias InitialController = UIKit.UINavigationController
      
      let bundle = R.hostingBundle
      let name = "QRcodeViewController"
      
      static func validate() throws {
        if UIKit.UIImage(named: "qrcode_tabbar_icon_qrcode") == nil { throw Rswift.ValidationError(description: "[R.swift] Image named 'qrcode_tabbar_icon_qrcode' is used in storyboard 'QRcodeViewController', but couldn't be loaded.") }
        if UIKit.UIImage(named: "qrcode_border") == nil { throw Rswift.ValidationError(description: "[R.swift] Image named 'qrcode_border' is used in storyboard 'QRcodeViewController', but couldn't be loaded.") }
        if UIKit.UIImage(named: "qrcode_scanline_qrcode") == nil { throw Rswift.ValidationError(description: "[R.swift] Image named 'qrcode_scanline_qrcode' is used in storyboard 'QRcodeViewController', but couldn't be loaded.") }
        if UIKit.UIImage(named: "qrcode_tabbar_icon_barcode") == nil { throw Rswift.ValidationError(description: "[R.swift] Image named 'qrcode_tabbar_icon_barcode' is used in storyboard 'QRcodeViewController', but couldn't be loaded.") }
      }
      
      fileprivate init() {}
    }
    
    struct welcomeViewController: Rswift.StoryboardResourceWithInitialControllerType, Rswift.Validatable {
      typealias InitialController = WelcomeViewController
      
      let bundle = R.hostingBundle
      let name = "WelcomeViewController"
      
      static func validate() throws {
        if UIKit.UIImage(named: "ad_background") == nil { throw Rswift.ValidationError(description: "[R.swift] Image named 'ad_background' is used in storyboard 'WelcomeViewController', but couldn't be loaded.") }
        if UIKit.UIImage(named: "avatar_default_big") == nil { throw Rswift.ValidationError(description: "[R.swift] Image named 'avatar_default_big' is used in storyboard 'WelcomeViewController', but couldn't be loaded.") }
      }
      
      fileprivate init() {}
    }
    
    fileprivate init() {}
  }
  
  fileprivate init() {}
}